<?php

namespace DOEBELING\BuHaJournal;

/**
 * Class buchungsElementBuchungssatzexport
 *
 * Stell Buchungsdaten aus einem Buchungssatz-Export bereit
 *
 * @package   DOEBELING\BuHaJournal\buchungen\buchung
 * @author    Andreas Döbeling <opensource@doebeling.de>
 * @copyright DÖBELING Web&IT
 * @link      https://github.com/ADoebeling/
 * @link      https://www.Doebeling.de
 * @license   CC BY-SA 4.0 <https://creativecommons.org/licenses/by-sa/4.0/>
 *
 */
class buchungssatz extends buchungsElement
{
    public static function load(array $input): journal
    {
        if (!is_array($input))
            throw new exception("Load erwartet ein Array");

        // Buchungsnummer;Teilbuchung;Belegdatum;Buchungstext;Konto;Kontobezeichnung;Gegenkonto;Gegenkontobezeichnung;Soll;Haben;Steuerschluessel;Steuersatz;Steuerschluesselbezeichnung;Belegnummer;Buchungsdatum;UStID;Umsatzart
        $input['csvFelder'] = ['Buchungsnummer' => 'id', 'Belegnummer' => 'nr', 'Belegdatum' => 'datum', 'Buchungstext' => 'text', 'Konto' => 'kontoVon', 'Gegenkonto' => 'kontoAn', 'Kontobezeichnung' => 'kontoVonName', 'Gegenkontobezeichnung' => 'kontoAnName', 'Soll' => 'betragSoll', 'Haben' => 'betragHaben'];
        $input['class'] = self::class;
        return parent::load($input);
    }

    protected function parseRawToNr()
    {
        if (empty($this->raw->nr))
        {
            $this->nr = self::getBuchungsNrFromString($this->raw->text);
        }
        parent::parseRawToNr(); // TODO: Change the autogenerated stub
    }

    protected function parseRawToMd()
    {
        $row = new mdTableRow();
        $row->setTitle("**Buchungssatz**");
        if (empty($this->raw->betragSoll))
        {
            $row->setText("`{$this->raw->kontoVon} {$this->raw->kontoVonName}`<br>:money_with_wings: `{$this->raw->kontoAn} {$this->raw->kontoAnName}`");

        }
        else
        {
            $row->setText("`{$this->raw->kontoAn} {$this->raw->kontoAnName}`<br>:money_with_wings: `{$this->raw->kontoVon} {$this->raw->kontoVonName}`");

        }
        $row->setLink("`{$this->raw->fileName}`");
        $this->mdTable->add($row);

        $row = new mdTableRow();
        $row->setTitle("&nbsp;&nbsp;&nbsp;Buchungsdatum");
        $row->setText(":date: `{$this->raw->datum}`");
        //$row->setLink("{$this->raw->fileName}");
        $this->mdTable->add($row);

        $row = new mdTableRow();
        $row->setTitle("&nbsp;&nbsp;&nbsp;Buchungsbetrag");
        $betrag = !empty($this->raw->betragSoll) ? $this->raw->betragSoll : $this->raw->betragHaben;
        $row->setText($betrag.' €');
        //$row->setLink("{$this->raw->fileName}");
        $this->mdTable->add($row);

        $row = new mdTableRow();
        $row->setTitle("&nbsp;&nbsp;&nbsp;Buchungstext");
        // TODO: Sanitizer
        $row->setText($raw = str_replace('|', '/', $this->raw->text));
        //$row->setLink("{$this->raw->fileName}");
        $this->mdTable->add($row);

        return parent::parseRawToMd();
    }
}