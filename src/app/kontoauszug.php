<?php

namespace DOEBELING\BuHaJournal;


/**
 * Class buchungsElementKontoauszug
 *
 * Stell Buchungsdaten aus einem Kontoauszug bereit
 * Stellt statische Methode zum Laden aller Kontoauszüge aus einem Ordner bereit
 *
 * @package   DOEBELING\BuHaJournal\buchungen\buchung
 * @author    Andreas Döbeling <opensource@doebeling.de>
 * @copyright DÖBELING Web&IT
 * @link      https://github.com/ADoebeling/
 * @link      https://www.Doebeling.de
 * @license   CC BY-SA 4.0 <https://creativecommons.org/licenses/by-sa/4.0/>
 *
 */
class kontoauszug extends buchungsElement
{
    /* RAW
                    [von] => Sparkasse
                    [file] => ../2020/KA - Kontoauszug//Kontoauszugcsv
                    [id] => 1234
                    [datum] => 01.11.2020
                    [an] => Provider
                    [text] => Rechung
                    [betrag] => -3,95
     */

    public static function load(array $input): journal
    {
        if (!is_array($input))
            throw new exception("Load erwartet ein Array");
        $input['csvFelder'] = ['BuchungID' => 'id', 'Wertstellung' => 'datum', 'Kontoname' => 'von', 'Empfänger/Auftraggeber' => 'an', 'Verwendungszweck' => 'text', 'Notiz' => 'vermerk', 'Betrag' => 'betrag'];
        $input['class'] = self::class;
        return parent::load($input);
    }

    protected function parseRawToNr()
    {
        $this->nr = isset($this->raw->id) ? $this->raw->id :'';
        parent::parseRawToNr(); // TODO: Change the autogenerated stub
    }

    /**
     * Methode parseRawToMd
     *
     * @return buchungsElement
     * @example
     *  [von] => Bank
        [file] => ../2020/KA - Kontoauszug//Kontoauszug.csv
        [id] => 1234
        [datum] => 25.02.2020
        [an] => Google Payment IE LTD GooDublin
        [text] =>
        [betrag] => 1234
     */
    protected function parseRawToMd()
    {
        $row = new mdTableRow();
        $an = empty($this->raw->an) ? 'Unbekannt' : $this->raw->an;
        $von = empty($this->raw->von) ? 'Unbekannt' : $this->raw->von;
        $row->setTitle("**Kontobewegung**");
        $row->setText("`$von` *an*<br>:money_with_wings: `$an`");
        $row->setLink("`{$this->raw->fileName}`");
        $this->mdTable->add($row);

        $row = new mdTableRow();
        $row->setTitle("&nbsp; &nbsp;Üb.-Datum");
        $row->setText(":date: `{$this->raw->datum}`");
        //$row->setLink("{$this->raw->fileName}");
        $this->mdTable->add($row);

        $row = new mdTableRow();
        $row->setTitle("&nbsp; &nbsp;Üb.-Betrag");
        $row->setText(":moneybag: `{$this->raw->betrag} €`");
        //$row->setLink("{$this->raw->fileName}");
        $this->mdTable->add($row);

        if (!empty($this->raw->text))
        {
            $row = new mdTableRow();
            $row->setTitle("&nbsp; &nbsp;Üb.-Zweck");
            $row->setText($this->raw->text);
            //$row->setLink("{$this->raw->fileName}");
        }

        if (!empty($this->raw->vermerk))
        {
            $row = new mdTableRow();
            $row->setTitle("&nbsp; &nbsp;Vermerk");
            $row->setText(":writing_hand: {$this->raw->vermerk}");
            //$row->setLink("{$this->raw->fileName}");
            $this->mdTable->add($row);
        }

        return parent::parseRawToMd();
    }
}